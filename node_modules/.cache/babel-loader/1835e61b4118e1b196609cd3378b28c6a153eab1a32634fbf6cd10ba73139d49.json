{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n    styles = props.styles,\n    selected = props.selected,\n    disabled = props.disabled,\n    enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n    children = props.children,\n    className = props.className,\n    index = props.index,\n    onRemoveItem = props.onRemoveItem,\n    removeButtonAriaLabel = props.removeButtonAriaLabel,\n    _a = props.title,\n    title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a,\n    removeButtonIconProps = props.removeButtonIconProps,\n    removeButtonProps = props.removeButtonProps;\n  var buttonRef = React.createRef();\n  var handleClick = function () {\n    var _a;\n    (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  var itemId = useId();\n  var disabledAttrs = enableTagFocusInDisabledPicker ? {\n    'aria-disabled': disabled,\n    tabindex: 0\n  } : {\n    disabled: disabled\n  };\n  return React.createElement(\"div\", {\n    \"data-selection-index\": index,\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    onClick: handleClick\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    title: title,\n    id: \"\".concat(itemId, \"-text\")\n  }, children), React.createElement(IconButton, __assign({\n    componentRef: buttonRef,\n    id: itemId,\n    onClick: onRemoveItem\n  }, disabledAttrs, {\n    iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : {\n      iconName: 'Cancel'\n    },\n    styles: {\n      icon: {\n        fontSize: '12px'\n      }\n    },\n    className: classNames.close,\n    \"aria-labelledby\": \"\".concat(itemId, \"-removeLabel \").concat(itemId, \"-text\")\n  }, removeButtonProps)), React.createElement(\"span\", {\n    id: \"\".concat(itemId, \"-removeLabel\"),\n    hidden: true\n  }, removeButtonAriaLabel));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"names":["React","styled","classNamesFunction","IconButton","getStyles","useId","getClassNames","TagItemBase","props","theme","styles","selected","disabled","enableTagFocusInDisabledPicker","children","className","index","onRemoveItem","removeButtonAriaLabel","_a","title","item","name","removeButtonIconProps","removeButtonProps","buttonRef","createRef","handleClick","current","focus","classNames","itemId","disabledAttrs","tabindex","createElement","root","role","key","onClick","text","id","concat","__assign","componentRef","iconProps","iconName","icon","fontSize","close","hidden","TagItem","undefined","scope"],"sources":["C:\\Users\\divc1\\Downloads\\demosb\\sb-agentic-ai-security-agents\\node_modules\\@fluentui\\react\\lib\\components\\pickers\\src\\components\\pickers\\TagPicker\\TagItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton, IButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nimport type { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n    removeButtonIconProps,\n    removeButtonProps,\n  } = props;\n\n  const buttonRef = React.createRef<IButton>();\n\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = () => {\n    buttonRef.current?.focus();\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled,\n      };\n\n  return (\n    <div data-selection-index={index} className={classNames.root} role={'listitem'} key={index} onClick={handleClick}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        componentRef={buttonRef}\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.close}\n        aria-labelledby={`${itemId}-removeLabel ${itemId}-text`}\n        {...removeButtonProps}\n      />\n      <span id={`${itemId}-removeLabel`} hidden>\n        {removeButtonAriaLabel}\n      </span>\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,MAAM,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC/D,SAASC,UAAU,QAAiB,iBAAiB;AACrD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,KAAK,QAAQ,uBAAuB;AAG7C,IAAMC,aAAa,GAAGJ,kBAAkB,EAAsC;AAE9E;;;AAGA,OAAO,IAAMK,WAAW,GAAG,SAAAA,CAACC,KAAoB;EAE5C,IAAAC,KAAK,GAaHD,KAAK,CAAAC,KAbF;IACLC,MAAM,GAYJF,KAAK,CAAAE,MAZD;IACNC,QAAQ,GAWNH,KAAK,CAAAG,QAXC;IACRC,QAAQ,GAUNJ,KAAK,CAAAI,QAVC;IACRC,8BAA8B,GAS5BL,KAAK,CAAAK,8BATuB;IAC9BC,QAAQ,GAQNN,KAAK,CAAAM,QARC;IACRC,SAAS,GAOPP,KAAK,CAAAO,SAPE;IACTC,KAAK,GAMHR,KAAK,CAAAQ,KANF;IACLC,YAAY,GAKVT,KAAK,CAAAS,YALK;IACZC,qBAAqB,GAInBV,KAAK,CAAAU,qBAJc;IACrBC,EAAA,GAGEX,KAAK,CAAAY,KAHsE;IAA7EA,KAAK,GAAAD,EAAA,cAAG,OAAOX,KAAK,CAACM,QAAQ,KAAK,QAAQ,GAAGN,KAAK,CAACM,QAAQ,GAAGN,KAAK,CAACa,IAAI,CAACC,IAAI,GAAAH,EAAA;IAC7EI,qBAAqB,GAEnBf,KAAK,CAAAe,qBAFc;IACrBC,iBAAiB,GACfhB,KAAK,CAAAgB,iBADU;EAGnB,IAAMC,SAAS,GAAGzB,KAAK,CAAC0B,SAAS,EAAW;EAE5C,IAAMC,WAAW,GAA4C,SAAAA,CAAA;;IAC3D,CAAAR,EAAA,GAAAM,SAAS,CAACG,OAAO,cAAAT,EAAA,uBAAAA,EAAA,CAAEU,KAAK,EAAE;EAC5B,CAAC;EAED,IAAMC,UAAU,GAAGxB,aAAa,CAACI,MAAM,EAAE;IACvCD,KAAK,EAAEA,KAAM;IACbM,SAAS,EAAAA,SAAA;IACTJ,QAAQ,EAAAA,QAAA;IACRC,QAAQ,EAAAA;GACT,CAAC;EAEF,IAAMmB,MAAM,GAAG1B,KAAK,EAAE;EAEtB,IAAM2B,aAAa,GAAGnB,8BAA8B,GAChD;IACE,eAAe,EAAED,QAAQ;IACzBqB,QAAQ,EAAE;GACX,GACD;IACErB,QAAQ,EAAAA;GACT;EAEL,OACEZ,KAAA,CAAAkC,aAAA;IAAA,wBAA2BlB,KAAK;IAAED,SAAS,EAAEe,UAAU,CAACK,IAAI;IAAEC,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAErB,KAAK;IAAEsB,OAAO,EAAEX;EAAW,GAC9G3B,KAAA,CAAAkC,aAAA;IAAMnB,SAAS,EAAEe,UAAU,CAACS,IAAI;IAAEnB,KAAK,EAAEA,KAAK;IAAEoB,EAAE,EAAE,GAAAC,MAAA,CAAGV,MAAM;EAAO,GACjEjB,QAAQ,CACJ,EACPd,KAAA,CAAAkC,aAAA,CAAC/B,UAAU,EAAAuC,QAAA;IACTC,YAAY,EAAElB,SAAS;IACvBe,EAAE,EAAET,MAAM;IACVO,OAAO,EAAErB;EAAY,GACjBe,aAAa;IACjBY,SAAS,EAAErB,qBAAqB,aAArBA,qBAAqB,cAArBA,qBAAqB,GAAI;MAAEsB,QAAQ,EAAE;IAAQ,CAAE;IAC1DnC,MAAM,EAAE;MAAEoC,IAAI,EAAE;QAAEC,QAAQ,EAAE;MAAM;IAAE,CAAE;IACtChC,SAAS,EAAEe,UAAU,CAACkB,KAAK;IAAA,mBACV,GAAAP,MAAA,CAAGV,MAAM,mBAAAU,MAAA,CAAgBV,MAAM;EAAO,GACnDP,iBAAiB,EACrB,EACFxB,KAAA,CAAAkC,aAAA;IAAMM,EAAE,EAAE,GAAAC,MAAA,CAAGV,MAAM,iBAAc;IAAEkB,MAAM;EAAA,GACtC/B,qBAAqB,CACjB,CACH;AAEV,CAAC;AAED,OAAO,IAAMgC,OAAO,GAAGjD,MAAM,CAAoDM,WAAW,EAAEH,SAAS,EAAE+C,SAAS,EAAE;EAClHC,KAAK,EAAE;CACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}