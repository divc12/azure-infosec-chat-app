{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Callout } from '../../Callout';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nvar styles = stylesImport;\nvar BaseFloatingPicker = /** @class */function (_super) {\n  __extends(BaseFloatingPicker, _super);\n  function BaseFloatingPicker(basePickerProps) {\n    var _this = _super.call(this, basePickerProps) || this;\n    _this.root = React.createRef();\n    _this.suggestionsControl = React.createRef();\n    _this.SuggestionsControlOfProperType = SuggestionsControl;\n    _this.isComponentMounted = false;\n    _this.onQueryStringChanged = function (queryString) {\n      if (queryString !== _this.state.queryString) {\n        _this.setState({\n          queryString: queryString\n        });\n        if (_this.props.onInputChanged) {\n          _this.props.onInputChanged(queryString);\n        }\n        _this.updateValue(queryString);\n      }\n    };\n    _this.hidePicker = function () {\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n      _this.setState({\n        suggestionsVisible: false\n      });\n      if (_this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n        _this.props.onSuggestionsHidden();\n      }\n    };\n    _this.showPicker = function (updateValue) {\n      if (updateValue === void 0) {\n        updateValue = false;\n      }\n      var wasShownBeforeUpdate = _this.isSuggestionsShown;\n      _this.setState({\n        suggestionsVisible: true\n      });\n      // Update the suggestions if updateValue == true\n      var value = _this.props.inputElement ? _this.props.inputElement.value : '';\n      if (updateValue) {\n        _this.updateValue(value);\n      }\n      if (_this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n        _this.props.onSuggestionsShown();\n      }\n    };\n    _this.completeSuggestion = function () {\n      if (_this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected()) {\n        _this.onChange(_this.suggestionsControl.current.currentSuggestion.item);\n      }\n    };\n    _this.onSuggestionClick = function (ev, item, index) {\n      _this.onChange(item);\n      _this._updateSuggestionsVisible(false /*shouldShow*/);\n    };\n    _this.onSuggestionRemove = function (ev, item, index) {\n      if (_this.props.onRemoveSuggestion) {\n        _this.props.onRemoveSuggestion(item);\n      }\n      if (_this.suggestionsControl.current) {\n        _this.suggestionsControl.current.removeSuggestion(index);\n      }\n    };\n    _this.onKeyDown = function (ev) {\n      if (!_this.state.suggestionsVisible || _this.props.inputElement && !_this.props.inputElement.contains(ev.target)) {\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-deprecated\n      var keyCode = ev.which;\n      switch (keyCode) {\n        case KeyCodes.escape:\n          _this.hidePicker();\n          ev.preventDefault();\n          ev.stopPropagation();\n          break;\n        case KeyCodes.tab:\n        case KeyCodes.enter:\n          if (!ev.shiftKey && !ev.ctrlKey && _this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            _this._onValidateInput();\n          }\n          break;\n        case KeyCodes.del:\n          if (_this.props.onRemoveSuggestion && _this.suggestionsControl.current && _this.suggestionsControl.current.hasSuggestionSelected() && _this.suggestionsControl.current.currentSuggestion && ev.shiftKey) {\n            _this.props.onRemoveSuggestion(_this.suggestionsControl.current.currentSuggestion.item);\n            _this.suggestionsControl.current.removeSuggestion();\n            _this.forceUpdate();\n            ev.stopPropagation();\n          }\n          break;\n        case KeyCodes.up:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            _this._updateActiveDescendant();\n          }\n          break;\n        case KeyCodes.down:\n          if (_this.suggestionsControl.current && _this.suggestionsControl.current.handleKeyDown(keyCode)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            _this._updateActiveDescendant();\n          }\n          break;\n      }\n    };\n    _this._onValidateInput = function () {\n      if (_this.state.queryString && _this.props.onValidateInput && _this.props.createGenericItem) {\n        var itemToConvert = _this.props.createGenericItem(_this.state.queryString, _this.props.onValidateInput(_this.state.queryString));\n        var convertedItems = _this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n        _this.onChange(convertedItems[0].item);\n      }\n    };\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.suggestionStore = basePickerProps.suggestionsStore;\n    _this.state = {\n      queryString: '',\n      didBind: false\n    };\n    return _this;\n  }\n  Object.defineProperty(BaseFloatingPicker.prototype, \"inputText\", {\n    get: function () {\n      return this.state.queryString;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"suggestions\", {\n    get: function () {\n      return this.suggestionStore.suggestions;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BaseFloatingPicker.prototype.forceResolveSuggestion = function () {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  };\n  Object.defineProperty(BaseFloatingPicker.prototype, \"currentSelectedSuggestionIndex\", {\n    get: function () {\n      return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseFloatingPicker.prototype, \"isSuggestionsShown\", {\n    get: function () {\n      return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BaseFloatingPicker.prototype.componentDidMount = function () {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  };\n  BaseFloatingPicker.prototype.componentDidUpdate = function () {\n    this._bindToInputElement();\n  };\n  BaseFloatingPicker.prototype.componentWillUnmount = function () {\n    this._unbindFromInputElement();\n    this._async.dispose();\n    this.isComponentMounted = false;\n  };\n  BaseFloatingPicker.prototype.updateSuggestions = function (suggestions, forceUpdate) {\n    if (forceUpdate === void 0) {\n      forceUpdate = false;\n    }\n    this.suggestionStore.updateSuggestions(suggestions);\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  };\n  BaseFloatingPicker.prototype.render = function () {\n    var className = this.props.className;\n    return React.createElement(\"div\", {\n      ref: this.root,\n      className: css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')\n    }, this.renderSuggestions());\n  };\n  BaseFloatingPicker.prototype.renderSuggestions = function () {\n    var TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n    if (this.props.suggestionItems) {\n      this.suggestionStore.updateSuggestions(this.props.suggestionItems);\n    }\n    return this.state.suggestionsVisible ? React.createElement(Callout, __assign({\n      className: styles.callout,\n      isBeakVisible: false,\n      gapSpace: 5,\n      target: this.props.inputElement,\n      onDismiss: this.hidePicker,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomRightEdge,\n      calloutWidth: this.props.calloutWidth ? this.props.calloutWidth : 0\n    }, this.props.pickerCalloutProps), React.createElement(TypedSuggestionsControl, __assign({\n      onRenderSuggestion: this.props.onRenderSuggestionsItem,\n      onSuggestionClick: this.onSuggestionClick,\n      onSuggestionRemove: this.onSuggestionRemove,\n      suggestions: this.suggestionStore.getSuggestions(),\n      componentRef: this.suggestionsControl,\n      completeSuggestion: this.completeSuggestion,\n      shouldLoopSelection: false\n    }, this.props.pickerSuggestionsProps))) : null;\n  };\n  BaseFloatingPicker.prototype.onSelectionChange = function () {\n    this.forceUpdate();\n  };\n  BaseFloatingPicker.prototype.updateValue = function (updatedValue) {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  };\n  BaseFloatingPicker.prototype.updateSuggestionWithZeroState = function () {\n    if (this.props.onZeroQuerySuggestion) {\n      var onEmptyInputFocus = this.props.onZeroQuerySuggestion;\n      var suggestions = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  };\n  BaseFloatingPicker.prototype.updateSuggestionsList = function (suggestions) {\n    var _this = this;\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestions)) {\n      this.updateSuggestions(suggestions, true /*forceUpdate*/);\n    } else if (suggestions && suggestions.then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      this.currentPromise = suggestions;\n      suggestions.then(function (newSuggestions) {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (suggestions === _this.currentPromise && _this.isComponentMounted) {\n          _this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  };\n  BaseFloatingPicker.prototype.onChange = function (item) {\n    if (this.props.onChange) {\n      this.props.onChange(item);\n    }\n  };\n  BaseFloatingPicker.prototype._updateActiveDescendant = function () {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      var selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId);\n      }\n    }\n  };\n  BaseFloatingPicker.prototype._onResolveSuggestions = function (updatedValue) {\n    var suggestions = this.props.onResolveSuggestions(updatedValue, this.props.selectedItems);\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  };\n  BaseFloatingPicker.prototype._updateSuggestionsVisible = function (shouldShow) {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  };\n  BaseFloatingPicker.prototype._bindToInputElement = function () {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: true\n      });\n    }\n  };\n  BaseFloatingPicker.prototype._unbindFromInputElement = function () {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({\n        didBind: false\n      });\n    }\n  };\n  return BaseFloatingPicker;\n}(React.Component);\nexport { BaseFloatingPicker };","map":{"version":3,"names":["React","stylesImport","Async","initializeComponentRef","css","KeyCodes","DirectionalHint","Callout","SuggestionsControl","styles","BaseFloatingPicker","_super","__extends","basePickerProps","_this","call","root","createRef","suggestionsControl","SuggestionsControlOfProperType","isComponentMounted","onQueryStringChanged","queryString","state","setState","props","onInputChanged","updateValue","hidePicker","wasShownBeforeUpdate","isSuggestionsShown","suggestionsVisible","onSuggestionsHidden","showPicker","value","inputElement","onSuggestionsShown","completeSuggestion","current","hasSuggestionSelected","onChange","currentSuggestion","item","onSuggestionClick","ev","index","_updateSuggestionsVisible","onSuggestionRemove","onRemoveSuggestion","removeSuggestion","onKeyDown","contains","target","keyCode","which","escape","preventDefault","stopPropagation","tab","enter","shiftKey","ctrlKey","handleKeyDown","_onValidateInput","del","forceUpdate","up","_updateActiveDescendant","down","onValidateInput","createGenericItem","itemToConvert","convertedItems","suggestionStore","convertSuggestionsToSuggestionItems","_async","suggestionsStore","didBind","Object","defineProperty","prototype","get","suggestions","forceResolveSuggestion","currentSuggestionIndex","undefined","componentDidMount","_bindToInputElement","_onResolveSuggestions","debounce","resolveDelay","componentDidUpdate","componentWillUnmount","_unbindFromInputElement","dispose","updateSuggestions","render","className","createElement","ref","renderSuggestions","TypedSuggestionsControl","suggestionItems","__assign","callout","isBeakVisible","gapSpace","onDismiss","directionalHint","bottomLeftEdge","directionalHintForRTL","bottomRightEdge","calloutWidth","pickerCalloutProps","onRenderSuggestion","onRenderSuggestionsItem","getSuggestions","componentRef","shouldLoopSelection","pickerSuggestionsProps","onSelectionChange","updatedValue","updateSuggestionWithZeroState","onZeroQuerySuggestion","onEmptyInputFocus","selectedItems","updateSuggestionsList","Array","isArray","then","currentPromise","newSuggestions","selectedElement","selectedElId","getAttribute","setAttribute","onResolveSuggestions","shouldShow","addEventListener","removeEventListener","Component"],"sources":["C:\\Users\\divc1\\Downloads\\demosb\\sb-agentic-ai-security-agents\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\FloatingPicker\\BaseFloatingPicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as stylesImport from './BaseFloatingPicker.scss';\nimport { Async, initializeComponentRef, css, KeyCodes } from '../../Utilities';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { Callout } from '../../Callout';\nimport { SuggestionsControl } from './Suggestions/SuggestionsControl';\nimport { SuggestionsStore } from './Suggestions/SuggestionsStore';\nimport type { IBaseFloatingPicker, IBaseFloatingPickerProps } from './BaseFloatingPicker.types';\nimport type { ISuggestionModel } from '../../Pickers';\nimport type { ISuggestionsControlProps } from './Suggestions/Suggestions.types';\n\nconst styles: any = stylesImport;\n\nexport interface IBaseFloatingPickerState {\n  queryString: string;\n  suggestionsVisible?: boolean;\n  didBind: boolean;\n}\n\nexport class BaseFloatingPicker<T extends {}, P extends IBaseFloatingPickerProps<T>>\n  extends React.Component<P, IBaseFloatingPickerState>\n  implements IBaseFloatingPicker\n{\n  protected selection: Selection;\n\n  protected root = React.createRef<HTMLDivElement>();\n  protected suggestionStore: SuggestionsStore<T>;\n  protected suggestionsControl: React.RefObject<SuggestionsControl<T>> = React.createRef();\n  protected SuggestionsControlOfProperType: new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T> =\n    SuggestionsControl as new (props: ISuggestionsControlProps<T>) => SuggestionsControl<T>;\n  protected currentPromise: PromiseLike<T[]>;\n  protected isComponentMounted: boolean = false;\n\n  private _async: Async;\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.suggestionStore = basePickerProps.suggestionsStore;\n    this.state = {\n      queryString: '',\n      didBind: false,\n    };\n  }\n\n  public get inputText(): string {\n    return this.state.queryString;\n  }\n\n  public get suggestions(): any[] {\n    return this.suggestionStore.suggestions;\n  }\n\n  public forceResolveSuggestion(): void {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.completeSuggestion();\n    } else {\n      this._onValidateInput();\n    }\n  }\n\n  public get currentSelectedSuggestionIndex(): number {\n    return this.suggestionsControl.current ? this.suggestionsControl.current.currentSuggestionIndex : -1;\n  }\n\n  public get isSuggestionsShown(): boolean {\n    return this.state.suggestionsVisible === undefined ? false : this.state.suggestionsVisible;\n  }\n\n  public onQueryStringChanged = (queryString: string): void => {\n    if (queryString !== this.state.queryString) {\n      this.setState({\n        queryString,\n      });\n\n      if (this.props.onInputChanged) {\n        (this.props.onInputChanged as (filter: string) => void)(queryString);\n      }\n\n      this.updateValue(queryString);\n    }\n  };\n\n  public hidePicker = (): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n\n    this.setState({\n      suggestionsVisible: false,\n    });\n\n    if (this.props.onSuggestionsHidden && wasShownBeforeUpdate) {\n      this.props.onSuggestionsHidden();\n    }\n  };\n\n  public showPicker = (updateValue: boolean = false): void => {\n    const wasShownBeforeUpdate = this.isSuggestionsShown;\n    this.setState({\n      suggestionsVisible: true,\n    });\n\n    // Update the suggestions if updateValue == true\n    const value = this.props.inputElement ? this.props.inputElement.value : '';\n    if (updateValue) {\n      this.updateValue(value);\n    }\n\n    if (this.props.onSuggestionsShown && !wasShownBeforeUpdate) {\n      this.props.onSuggestionsShown();\n    }\n  };\n\n  public componentDidMount(): void {\n    this._bindToInputElement();\n    this.isComponentMounted = true;\n\n    this._onResolveSuggestions = this._async.debounce(this._onResolveSuggestions, this.props.resolveDelay);\n  }\n\n  public componentDidUpdate(): void {\n    this._bindToInputElement();\n  }\n\n  public componentWillUnmount(): void {\n    this._unbindFromInputElement();\n    this._async.dispose();\n    this.isComponentMounted = false;\n  }\n\n  public completeSuggestion = (): void => {\n    if (this.suggestionsControl.current && this.suggestionsControl.current.hasSuggestionSelected()) {\n      this.onChange(this.suggestionsControl.current.currentSuggestion!.item);\n    }\n  };\n\n  public updateSuggestions(suggestions: T[], forceUpdate: boolean = false): void {\n    this.suggestionStore.updateSuggestions(suggestions);\n\n    if (forceUpdate) {\n      this.forceUpdate();\n    }\n  }\n\n  public render(): JSX.Element {\n    const { className } = this.props;\n    return (\n      <div ref={this.root} className={css('ms-BasePicker ms-BaseFloatingPicker', className ? className : '')}>\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    const TypedSuggestionsControl = this.SuggestionsControlOfProperType;\n\n    if (this.props.suggestionItems) {\n      this.suggestionStore.updateSuggestions(this.props.suggestionItems!);\n    }\n\n    return this.state.suggestionsVisible ? (\n      <Callout\n        className={styles.callout}\n        isBeakVisible={false}\n        gapSpace={5}\n        target={this.props.inputElement}\n        onDismiss={this.hidePicker}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        directionalHintForRTL={DirectionalHint.bottomRightEdge}\n        calloutWidth={this.props.calloutWidth ? this.props.calloutWidth : 0}\n        {...this.props.pickerCalloutProps}\n      >\n        <TypedSuggestionsControl\n          onRenderSuggestion={this.props.onRenderSuggestionsItem}\n          onSuggestionClick={this.onSuggestionClick}\n          onSuggestionRemove={this.onSuggestionRemove}\n          suggestions={this.suggestionStore.getSuggestions()}\n          componentRef={this.suggestionsControl}\n          completeSuggestion={this.completeSuggestion}\n          shouldLoopSelection={false}\n          {...this.props.pickerSuggestionsProps}\n        />\n      </Callout>\n    ) : null;\n  }\n\n  protected onSelectionChange(): void {\n    this.forceUpdate();\n  }\n\n  protected updateValue(updatedValue: string): void {\n    if (updatedValue === '') {\n      this.updateSuggestionWithZeroState();\n    } else {\n      this._onResolveSuggestions(updatedValue);\n    }\n  }\n\n  protected updateSuggestionWithZeroState(): void {\n    if (this.props.onZeroQuerySuggestion) {\n      const onEmptyInputFocus = this.props.onZeroQuerySuggestion as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n      const suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.props.selectedItems);\n      this.updateSuggestionsList(suggestions);\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>): void {\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike.\n    // If it is then resolve it asynchronously.\n    if (Array.isArray(suggestions)) {\n      this.updateSuggestions(suggestions, true /*forceUpdate*/);\n    } else if (suggestions && (suggestions as PromiseLike<T[]>).then) {\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      this.currentPromise = suggestions;\n      suggestions.then((newSuggestions: T[]) => {\n        // Only update if the next promise has not yet resolved and\n        // the floating picker is still mounted.\n        if (suggestions === this.currentPromise && this.isComponentMounted) {\n          this.updateSuggestions(newSuggestions, true /*forceUpdate*/);\n        }\n      });\n    }\n  }\n\n  protected onChange(item: T): void {\n    if (this.props.onChange) {\n      (this.props.onChange as (items: T) => void)(item);\n    }\n  }\n\n  protected onSuggestionClick = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    this.onChange(item);\n    this._updateSuggestionsVisible(false /*shouldShow*/);\n  };\n\n  protected onSuggestionRemove = (ev: React.MouseEvent<HTMLElement>, item: T, index: number): void => {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as (item: T) => void)(item);\n    }\n\n    if (this.suggestionsControl.current) {\n      this.suggestionsControl.current.removeSuggestion(index);\n    }\n  };\n\n  protected onKeyDown = (ev: MouseEvent): void => {\n    if (\n      !this.state.suggestionsVisible ||\n      (this.props.inputElement && !(this.props.inputElement as HTMLElement).contains(ev.target as HTMLElement))\n    ) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    const keyCode = ev.which;\n    switch (keyCode) {\n      case KeyCodes.escape:\n        this.hidePicker();\n        ev.preventDefault();\n        ev.stopPropagation();\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (\n          !ev.shiftKey &&\n          !ev.ctrlKey &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.handleKeyDown(keyCode)\n        ) {\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n        break;\n\n      case KeyCodes.del:\n        if (\n          this.props.onRemoveSuggestion &&\n          this.suggestionsControl.current &&\n          this.suggestionsControl.current.hasSuggestionSelected() &&\n          this.suggestionsControl.current.currentSuggestion &&\n          ev.shiftKey\n        ) {\n          (this.props.onRemoveSuggestion as (item: T) => void)(this.suggestionsControl.current.currentSuggestion!.item);\n\n          this.suggestionsControl.current.removeSuggestion();\n          this.forceUpdate();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.up:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n\n      case KeyCodes.down:\n        if (this.suggestionsControl.current && this.suggestionsControl.current.handleKeyDown(keyCode)) {\n          ev.preventDefault();\n          ev.stopPropagation();\n          this._updateActiveDescendant();\n        }\n        break;\n    }\n  };\n\n  private _updateActiveDescendant(): void {\n    if (this.props.inputElement && this.suggestionsControl.current && this.suggestionsControl.current.selectedElement) {\n      const selectedElId = this.suggestionsControl.current.selectedElement.getAttribute('id');\n      if (selectedElId) {\n        this.props.inputElement.setAttribute('aria-activedescendant', selectedElId as string);\n      }\n    }\n  }\n\n  private _onResolveSuggestions(updatedValue: string): void {\n    const suggestions: T[] | PromiseLike<T[]> | null = this.props.onResolveSuggestions(\n      updatedValue,\n      this.props.selectedItems,\n    );\n\n    this._updateSuggestionsVisible(true /*shouldShow*/);\n    if (suggestions !== null) {\n      this.updateSuggestionsList(suggestions);\n    }\n  }\n\n  private _onValidateInput = (): void => {\n    if (this.state.queryString && this.props.onValidateInput && this.props.createGenericItem) {\n      const itemToConvert: ISuggestionModel<T> = (\n        this.props.createGenericItem as (input: string, isValid: boolean) => ISuggestionModel<T>\n      )(this.state.queryString, (this.props.onValidateInput as (input: string) => boolean)(this.state.queryString));\n      const convertedItems = this.suggestionStore.convertSuggestionsToSuggestionItems([itemToConvert]);\n      this.onChange(convertedItems[0].item);\n    }\n  };\n\n  private _updateSuggestionsVisible(shouldShow: boolean): void {\n    if (shouldShow) {\n      this.showPicker();\n    } else {\n      this.hidePicker();\n    }\n  }\n\n  private _bindToInputElement(): void {\n    if (this.props.inputElement && !this.state.didBind) {\n      this.props.inputElement.addEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: true });\n    }\n  }\n\n  private _unbindFromInputElement(): void {\n    if (this.props.inputElement && this.state.didBind) {\n      this.props.inputElement.removeEventListener('keydown', this.onKeyDown);\n      this.setState({ didBind: false });\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}