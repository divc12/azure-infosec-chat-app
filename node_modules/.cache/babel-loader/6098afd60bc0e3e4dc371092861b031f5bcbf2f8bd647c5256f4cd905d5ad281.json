{"ast":null,"code":"import * as React from 'react';\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","map":{"version":3,"names":["React","usePrevious","value","ref","useRef","useEffect","current"],"sources":["C:\\Users\\divc1\\Downloads\\demosb\\sb-agentic-ai-security-agents\\node_modules\\@fluentui\\react-hooks\\src\\usePrevious.ts"],"sourcesContent":["import * as React from 'react';\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = React.useRef<T | undefined>();\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;;;;;AAKA,OAAM,SAAUC,WAAWA,CAAIC,KAAQ;EACrC,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,EAAiB;EACzCJ,KAAK,CAACK,SAAS,CAAC;IACdF,GAAG,CAACG,OAAO,GAAGJ,KAAK;EACrB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACG,OAAO;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}