{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divc1\\\\Downloads\\\\demosb\\\\sb-agentic-ai-security-agents\\\\src\\\\components\\\\ApplicationPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Stack, TextField, PrimaryButton, IconButton, Icon } from '@fluentui/react';\nimport { useChat } from '../contexts/ChatContext';\nimport styles from './ApplicationPage.module.css';\nimport { appConfig } from '../config/appConfig';\n\n/*********************************************************************\r\n * Now that most colors live in CSS module, we can simplify:\r\n * - IconButtons use `className={styles.darkIcon}` to get dark gray color.\r\n * - PrimaryButton uses `className={styles.sendButtonRed}` to get red styling.\r\n *********************************************************************/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uploadIcon = {\n  iconName: 'Upload',\n  styles: {\n    root: {\n      color: '#333333' /* Text/Icon Dark Gray */\n    }\n  }\n};\nconst downloadIcon = {\n  iconName: 'Download',\n  styles: {\n    root: {\n      color: '#333333' /* Text/Icon Dark Gray */\n    }\n  }\n};\nconst clearIcon = {\n  iconName: 'Clear',\n  styles: {\n    root: {\n      color: '#333333' /* Text/Icon Dark Gray */\n    }\n  }\n};\nconst initialSendIcon = {\n  iconName: 'Send',\n  styles: {\n    root: {\n      transform: 'rotate(-45deg)',\n      color: '#F5F5F5'\n    }\n  }\n};\nconst sendIconText = {\n  iconName: 'ArrowUpRight8',\n  styles: {\n    root: {\n      transform: 'rotate(-45deg)',\n      color: '#F5F5F5'\n    }\n  }\n};\nconst sendIconProcessing = {\n  iconName: 'SquareShapeSolid',\n  styles: {\n    root: {\n      fontSize: '13px',\n      color: '#F5F5F5' /* Text/Icon Dark Gray */\n    }\n  }\n};\n/*********************************************************************\r\n * getSendButtonStyles()\r\n *\r\n * We still need the rotating‐scale animation, so we keep the\r\n * keyframe reference. But the actual colors now live in CSS.\r\n * We only need to specify the animation properties here.\r\n *********************************************************************/\nconst getSendButtonStyles = () => ({\n  root: {\n    animationName: 'scaleIn',\n    animationDuration: '0.3s'\n  },\n  icon: {\n    transition: 'transform 0.1s ease-in-out'\n  }\n});\nexport const ApplicationPage = () => {\n  _s();\n  // 1. Determine appId from URL\n  const rawPath = window.location.pathname;\n  const appId = rawPath.startsWith('/app') ? rawPath.replace('/app', '').replace('/', '') : '1';\n  const config = appConfig[appId] || appConfig['1'];\n\n  // 2. Consume ChatContext\n  const {\n    messages,\n    isProcessing,\n    sendMessage\n  } = useChat();\n\n  // 3. Local input state & \"hasTyped\"\n  const [inputValue, setInputValue] = useState('');\n  const [hasTyped, setHasTyped] = useState(false);\n\n  // 4. Ref for auto-scrolling\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // 5. Handlers\n  const handleSend = () => {\n    if (!inputValue.trim() && !isProcessing || isProcessing) return;\n    if (inputValue.trim()) {\n      sendMessage(inputValue.trim());\n      setInputValue('');\n      setHasTyped(false);\n    }\n  };\n  const handleChange = (_, newVal) => {\n    setInputValue(newVal !== null && newVal !== void 0 ? newVal : '');\n    setHasTyped(Boolean(newVal && newVal.length > 0));\n  };\n  const handleUpload = e => {\n    var _e$target$files$, _e$target$files;\n    const file = (_e$target$files$ = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) !== null && _e$target$files$ !== void 0 ? _e$target$files$ : null;\n    if (file) {\n      // TODO: implement upload logic\n    }\n  };\n  const handleDownload = () => {\n    const chatText = messages.map(m => `${m.sender}: ${m.text}`).join('\\n');\n    const blob = new Blob([chatText], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'chat_history.txt';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const handleClear = () => {\n    setInputValue('');\n    setHasTyped(false);\n  };\n  const onEnterPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const getSendIcon = () => {\n    if (isProcessing) return sendIconProcessing;\n    if (hasTyped) return sendIconText;\n    return initialSendIcon;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.appPageContainer,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      className: styles.chatFrame,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          iconName: config.iconName,\n          className: styles.headerIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), config.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageContainer,\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender === 'user' ? styles.messageRowUser : styles.messageRowBot,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.sender === 'user' ? styles.bubbleUser : styles.bubbleBot,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputArea,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.textFieldWrapper,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            placeholder: \"Type your message...\",\n            value: inputValue,\n            onChange: handleChange,\n            onKeyDown: onEnterPress,\n            className: styles.textField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.controlBar,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.leftControls,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              iconProps: uploadIcon,\n              className: styles.darkIcon,\n              ariaLabel: \"Upload file\",\n              onClick: () => {\n                var _document$getElementB;\n                return (_document$getElementB = document.getElementById('fileInput')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.click();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"fileInput\",\n              type: \"file\",\n              accept: \"*\",\n              style: {\n                display: 'none'\n              },\n              onChange: handleUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              iconProps: downloadIcon,\n              className: styles.darkIcon,\n              ariaLabel: \"Download chat history\",\n              onClick: handleDownload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              iconProps: clearIcon,\n              className: styles.darkIcon,\n              ariaLabel: \"Clear text\",\n              onClick: handleClear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.rightControls,\n            children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              iconProps: getSendIcon(),\n              onClick: handleSend,\n              styles: getSendButtonStyles(),\n              ariaLabel: \"Send message\",\n              className: styles.sendButtonRed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationPage, \"MHOCzPSOaYkmcC06WOoqegUUAPE=\", false, function () {\n  return [useChat];\n});\n_c = ApplicationPage;\nexport default ApplicationPage;\nvar _c;\n$RefreshReg$(_c, \"ApplicationPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Stack","TextField","PrimaryButton","IconButton","Icon","useChat","styles","appConfig","jsxDEV","_jsxDEV","uploadIcon","iconName","root","color","downloadIcon","clearIcon","initialSendIcon","transform","sendIconText","sendIconProcessing","fontSize","getSendButtonStyles","animationName","animationDuration","icon","transition","ApplicationPage","_s","rawPath","window","location","pathname","appId","startsWith","replace","config","messages","isProcessing","sendMessage","inputValue","setInputValue","hasTyped","setHasTyped","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","handleChange","_","newVal","Boolean","length","handleUpload","e","_e$target$files$","_e$target$files","file","target","files","handleDownload","chatText","map","m","sender","text","join","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","handleClear","onEnterPress","key","shiftKey","preventDefault","getSendIcon","className","appPageContainer","children","chatFrame","header","headerIcon","fileName","_jsxFileName","lineNumber","columnNumber","title","messageContainer","msg","messageRowUser","messageRowBot","bubbleUser","bubbleBot","id","ref","inputArea","textFieldWrapper","multiline","placeholder","value","onChange","onKeyDown","textField","controlBar","leftControls","iconProps","darkIcon","ariaLabel","onClick","_document$getElementB","getElementById","accept","style","display","rightControls","sendButtonRed","_c","$RefreshReg$"],"sources":["C:/Users/divc1/Downloads/demosb/sb-agentic-ai-security-agents/src/components/ApplicationPage.tsx"],"sourcesContent":["import React, {\r\n  FC,\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  ChangeEvent,\r\n  KeyboardEvent,\r\n} from 'react';\r\nimport {\r\n  Stack,\r\n  TextField,\r\n  PrimaryButton,\r\n  IconButton,\r\n  Icon,\r\n  IIconProps,\r\n  IButtonStyles,\r\n} from '@fluentui/react';\r\nimport { useChat, Message } from '../contexts/ChatContext';\r\nimport styles from './ApplicationPage.module.css';\r\nimport { appConfig } from '../config/appConfig';\r\n\r\n/*********************************************************************\r\n * Now that most colors live in CSS module, we can simplify:\r\n * - IconButtons use `className={styles.darkIcon}` to get dark gray color.\r\n * - PrimaryButton uses `className={styles.sendButtonRed}` to get red styling.\r\n *********************************************************************/\r\nconst uploadIcon: IIconProps = {\r\n  iconName: 'Upload',\r\n  styles: {\r\n    root: {\r\n      color: '#333333', /* Text/Icon Dark Gray */\r\n    },\r\n  },\r\n};\r\n\r\nconst downloadIcon: IIconProps = {\r\n  iconName: 'Download',\r\n  styles: {\r\n    root: {\r\n      color: '#333333', /* Text/Icon Dark Gray */\r\n    },\r\n  },\r\n};\r\n\r\nconst clearIcon: IIconProps = {\r\n  iconName: 'Clear',\r\n  styles: {\r\n    root: {\r\n      color: '#333333', /* Text/Icon Dark Gray */\r\n    },\r\n  },\r\n};\r\n\r\nconst initialSendIcon: IIconProps = {\r\n  iconName: 'Send',\r\n  styles: {\r\n    root: {\r\n      transform: 'rotate(-45deg)',\r\n      color: '#F5F5F5', \r\n    },\r\n  },\r\n};\r\n\r\nconst sendIconText: IIconProps = {\r\n  iconName: 'ArrowUpRight8',\r\n  styles: {\r\n    root: {\r\n      transform: 'rotate(-45deg)',\r\n      color: '#F5F5F5', \r\n    },\r\n  },\r\n};\r\n\r\nconst sendIconProcessing: IIconProps = {\r\n  iconName: 'SquareShapeSolid',\r\n  styles: {\r\n    root: {\r\n      fontSize: '13px',\r\n      color: '#F5F5F5', /* Text/Icon Dark Gray */\r\n    },\r\n  },\r\n};\r\n/*********************************************************************\r\n * getSendButtonStyles()\r\n *\r\n * We still need the rotating‐scale animation, so we keep the\r\n * keyframe reference. But the actual colors now live in CSS.\r\n * We only need to specify the animation properties here.\r\n *********************************************************************/\r\nconst getSendButtonStyles = (): IButtonStyles => ({\r\n  root: {\r\n    animationName: 'scaleIn',\r\n    animationDuration: '0.3s',\r\n  },\r\n  icon: {\r\n    transition: 'transform 0.1s ease-in-out',\r\n  },\r\n});\r\n\r\nexport const ApplicationPage: FC = () => {\r\n  // 1. Determine appId from URL\r\n  const rawPath = window.location.pathname;\r\n  const appId = rawPath.startsWith('/app')\r\n    ? rawPath.replace('/app', '').replace('/', '')\r\n    : '1';\r\n  const config = appConfig[appId] || appConfig['1'];\r\n\r\n  // 2. Consume ChatContext\r\n  const { messages, isProcessing, sendMessage } = useChat();\r\n\r\n  // 3. Local input state & \"hasTyped\"\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const [hasTyped, setHasTyped] = useState<boolean>(false);\r\n\r\n  // 4. Ref for auto-scrolling\r\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // 5. Handlers\r\n  const handleSend = () => {\r\n    if ((!inputValue.trim() && !isProcessing) || isProcessing) return;\r\n    if (inputValue.trim()) {\r\n      sendMessage(inputValue.trim());\r\n      setInputValue('');\r\n      setHasTyped(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (_: any, newVal?: string) => {\r\n    setInputValue(newVal ?? '');\r\n    setHasTyped(Boolean(newVal && newVal.length > 0));\r\n  };\r\n\r\n  const handleUpload = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0] ?? null;\r\n    if (file) {\r\n      // TODO: implement upload logic\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const chatText = messages.map((m) => `${m.sender}: ${m.text}`).join('\\n');\r\n    const blob = new Blob([chatText], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'chat_history.txt';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInputValue('');\r\n    setHasTyped(false);\r\n  };\r\n\r\n  const onEnterPress = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const getSendIcon = (): IIconProps => {\r\n    if (isProcessing) return sendIconProcessing;\r\n    if (hasTyped) return sendIconText;\r\n    return initialSendIcon;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.appPageContainer}>\r\n      <Stack className={styles.chatFrame}>\r\n        {/* Header */}\r\n        <div className={styles.header}>\r\n          <Icon iconName={config.iconName} className={styles.headerIcon} />\r\n          {config.title}\r\n        </div>\r\n\r\n        {/* Chat panel */}\r\n        <div className={styles.messageContainer}>\r\n          {messages.map((msg: Message) => (\r\n            <div\r\n              key={msg.id}\r\n              className={\r\n                msg.sender === 'user'\r\n                  ? styles.messageRowUser\r\n                  : styles.messageRowBot\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  msg.sender === 'user'\r\n                    ? styles.bubbleUser\r\n                    : styles.bubbleBot\r\n                }\r\n              >\r\n                {msg.text}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input + controls */}\r\n        <div className={styles.inputArea}>\r\n          <div className={styles.textFieldWrapper}>\r\n            <TextField\r\n              multiline\r\n              placeholder=\"Type your message...\"\r\n              value={inputValue}\r\n              onChange={handleChange}\r\n              onKeyDown={onEnterPress}\r\n              className={styles.textField}\r\n            />\r\n          </div>\r\n          <div className={styles.controlBar}>\r\n            <div className={styles.leftControls}>\r\n              {/* Now using CSS class \"darkIcon\" to style all these icons */}\r\n              <IconButton\r\n                iconProps={uploadIcon}\r\n                className={styles.darkIcon}\r\n                ariaLabel=\"Upload file\"\r\n                onClick={() =>\r\n                  document.getElementById('fileInput')?.click()\r\n                }\r\n              />\r\n              <input\r\n                id=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\"*\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n              />\r\n              <IconButton\r\n                iconProps={downloadIcon}\r\n                className={styles.darkIcon}\r\n                ariaLabel=\"Download chat history\"\r\n                onClick={handleDownload}\r\n              />\r\n              <IconButton\r\n                iconProps={clearIcon}\r\n                className={styles.darkIcon}\r\n                ariaLabel=\"Clear text\"\r\n                onClick={handleClear}\r\n              />\r\n            </div>\r\n            <div className={styles.rightControls}>\r\n              {/* Send button now uses CSS class \"sendButtonRed\" */}\r\n              <PrimaryButton\r\n                iconProps={getSendIcon()}\r\n                onClick={handleSend}\r\n                styles={getSendButtonStyles()}\r\n                ariaLabel=\"Send message\"\r\n                className={styles.sendButtonRed}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplicationPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAEVC,QAAQ,EACRC,MAAM,EACNC,SAAS,QAGJ,OAAO;AACd,SACEC,KAAK,EACLC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,IAAI,QAGC,iBAAiB;AACxB,SAASC,OAAO,QAAiB,yBAAyB;AAC1D,OAAOC,MAAM,MAAM,8BAA8B;AACjD,SAASC,SAAS,QAAQ,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,UAAsB,GAAG;EAC7BC,QAAQ,EAAE,QAAQ;EAClBL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJC,KAAK,EAAE,SAAS,CAAE;IACpB;EACF;AACF,CAAC;AAED,MAAMC,YAAwB,GAAG;EAC/BH,QAAQ,EAAE,UAAU;EACpBL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJC,KAAK,EAAE,SAAS,CAAE;IACpB;EACF;AACF,CAAC;AAED,MAAME,SAAqB,GAAG;EAC5BJ,QAAQ,EAAE,OAAO;EACjBL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJC,KAAK,EAAE,SAAS,CAAE;IACpB;EACF;AACF,CAAC;AAED,MAAMG,eAA2B,GAAG;EAClCL,QAAQ,EAAE,MAAM;EAChBL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJK,SAAS,EAAE,gBAAgB;MAC3BJ,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAED,MAAMK,YAAwB,GAAG;EAC/BP,QAAQ,EAAE,eAAe;EACzBL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJK,SAAS,EAAE,gBAAgB;MAC3BJ,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAED,MAAMM,kBAA8B,GAAG;EACrCR,QAAQ,EAAE,kBAAkB;EAC5BL,MAAM,EAAE;IACNM,IAAI,EAAE;MACJQ,QAAQ,EAAE,MAAM;MAChBP,KAAK,EAAE,SAAS,CAAE;IACpB;EACF;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,mBAAmB,GAAGA,CAAA,MAAsB;EAChDT,IAAI,EAAE;IACJU,aAAa,EAAE,SAAS;IACxBC,iBAAiB,EAAE;EACrB,CAAC;EACDC,IAAI,EAAE;IACJC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC;EACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EACxC,MAAMC,KAAK,GAAGJ,OAAO,CAACK,UAAU,CAAC,MAAM,CAAC,GACpCL,OAAO,CAACM,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAC5C,GAAG;EACP,MAAMC,MAAM,GAAG5B,SAAS,CAACyB,KAAK,CAAC,IAAIzB,SAAS,CAAC,GAAG,CAAC;;EAEjD;EACA,MAAM;IAAE6B,QAAQ;IAAEC,YAAY;IAAEC;EAAY,CAAC,GAAGjC,OAAO,CAAC,CAAC;;EAEzD;EACA,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAU,KAAK,CAAC;;EAExD;EACA,MAAM8C,cAAc,GAAG7C,MAAM,CAAwB,IAAI,CAAC;EAC1DC,SAAS,CAAC,MAAM;IAAA,IAAA6C,qBAAA;IACd,CAAAA,qBAAA,GAAAD,cAAc,CAACE,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAK,CAACT,UAAU,CAACU,IAAI,CAAC,CAAC,IAAI,CAACZ,YAAY,IAAKA,YAAY,EAAE;IAC3D,IAAIE,UAAU,CAACU,IAAI,CAAC,CAAC,EAAE;MACrBX,WAAW,CAACC,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;MAC9BT,aAAa,CAAC,EAAE,CAAC;MACjBE,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAACC,CAAM,EAAEC,MAAe,KAAK;IAChDZ,aAAa,CAACY,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,CAAC;IAC3BV,WAAW,CAACW,OAAO,CAACD,MAAM,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAgC,IAAK;IAAA,IAAAC,gBAAA,EAAAC,eAAA;IACzD,MAAMC,IAAI,IAAAF,gBAAA,IAAAC,eAAA,GAAGF,CAAC,CAACI,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,cAAAD,gBAAA,cAAAA,gBAAA,GAAI,IAAI;IACxC,IAAIE,IAAI,EAAE;MACR;IAAA;EAEJ,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG3B,QAAQ,CAAC4B,GAAG,CAAEC,CAAC,IAAK,GAAGA,CAAC,CAACC,MAAM,KAAKD,CAAC,CAACE,IAAI,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACzE,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAAC,EAAE;MAAEQ,IAAI,EAAE;IAAa,CAAC,CAAC;IACzD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;IACfG,IAAI,CAACI,QAAQ,GAAG,kBAAkB;IAClCH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC;EAED,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB5C,aAAa,CAAC,EAAE,CAAC;IACjBE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM2C,YAAY,GAAI7B,CAAqC,IAAK;IAC9D,IAAIA,CAAC,CAAC8B,GAAG,KAAK,OAAO,IAAI,CAAC9B,CAAC,CAAC+B,QAAQ,EAAE;MACpC/B,CAAC,CAACgC,cAAc,CAAC,CAAC;MAClBxC,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAMyC,WAAW,GAAGA,CAAA,KAAkB;IACpC,IAAIpD,YAAY,EAAE,OAAOlB,kBAAkB;IAC3C,IAAIsB,QAAQ,EAAE,OAAOvB,YAAY;IACjC,OAAOF,eAAe;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKiF,SAAS,EAAEpF,MAAM,CAACqF,gBAAiB;IAAAC,QAAA,eACtCnF,OAAA,CAACT,KAAK;MAAC0F,SAAS,EAAEpF,MAAM,CAACuF,SAAU;MAAAD,QAAA,gBAEjCnF,OAAA;QAAKiF,SAAS,EAAEpF,MAAM,CAACwF,MAAO;QAAAF,QAAA,gBAC5BnF,OAAA,CAACL,IAAI;UAACO,QAAQ,EAAEwB,MAAM,CAACxB,QAAS;UAAC+E,SAAS,EAAEpF,MAAM,CAACyF;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAChEhE,MAAM,CAACiE,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAGN1F,OAAA;QAAKiF,SAAS,EAAEpF,MAAM,CAAC+F,gBAAiB;QAAAT,QAAA,GACrCxD,QAAQ,CAAC4B,GAAG,CAAEsC,GAAY,iBACzB7F,OAAA;UAEEiF,SAAS,EACPY,GAAG,CAACpC,MAAM,KAAK,MAAM,GACjB5D,MAAM,CAACiG,cAAc,GACrBjG,MAAM,CAACkG,aACZ;UAAAZ,QAAA,eAEDnF,OAAA;YACEiF,SAAS,EACPY,GAAG,CAACpC,MAAM,KAAK,MAAM,GACjB5D,MAAM,CAACmG,UAAU,GACjBnG,MAAM,CAACoG,SACZ;YAAAd,QAAA,EAEAU,GAAG,CAACnC;UAAI;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC,GAfDG,GAAG,CAACK,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgBR,CACN,CAAC,eACF1F,OAAA;UAAKmG,GAAG,EAAEjE;QAAe;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAGN1F,OAAA;QAAKiF,SAAS,EAAEpF,MAAM,CAACuG,SAAU;QAAAjB,QAAA,gBAC/BnF,OAAA;UAAKiF,SAAS,EAAEpF,MAAM,CAACwG,gBAAiB;UAAAlB,QAAA,eACtCnF,OAAA,CAACR,SAAS;YACR8G,SAAS;YACTC,WAAW,EAAC,sBAAsB;YAClCC,KAAK,EAAE1E,UAAW;YAClB2E,QAAQ,EAAEhE,YAAa;YACvBiE,SAAS,EAAE9B,YAAa;YACxBK,SAAS,EAAEpF,MAAM,CAAC8G;UAAU;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1F,OAAA;UAAKiF,SAAS,EAAEpF,MAAM,CAAC+G,UAAW;UAAAzB,QAAA,gBAChCnF,OAAA;YAAKiF,SAAS,EAAEpF,MAAM,CAACgH,YAAa;YAAA1B,QAAA,gBAElCnF,OAAA,CAACN,UAAU;cACToH,SAAS,EAAE7G,UAAW;cACtBgF,SAAS,EAAEpF,MAAM,CAACkH,QAAS;cAC3BC,SAAS,EAAC,aAAa;cACvBC,OAAO,EAAEA,CAAA;gBAAA,IAAAC,qBAAA;gBAAA,QAAAA,qBAAA,GACP/C,QAAQ,CAACgD,cAAc,CAAC,WAAW,CAAC,cAAAD,qBAAA,uBAApCA,qBAAA,CAAsCzC,KAAK,CAAC,CAAC;cAAA;YAC9C;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACF1F,OAAA;cACEkG,EAAE,EAAC,WAAW;cACdpC,IAAI,EAAC,MAAM;cACXsD,MAAM,EAAC,GAAG;cACVC,KAAK,EAAE;gBAAEC,OAAO,EAAE;cAAO,CAAE;cAC3Bb,QAAQ,EAAE3D;YAAa;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,eACF1F,OAAA,CAACN,UAAU;cACToH,SAAS,EAAEzG,YAAa;cACxB4E,SAAS,EAAEpF,MAAM,CAACkH,QAAS;cAC3BC,SAAS,EAAC,uBAAuB;cACjCC,OAAO,EAAE5D;YAAe;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACF1F,OAAA,CAACN,UAAU;cACToH,SAAS,EAAExG,SAAU;cACrB2E,SAAS,EAAEpF,MAAM,CAACkH,QAAS;cAC3BC,SAAS,EAAC,YAAY;cACtBC,OAAO,EAAEtC;YAAY;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN1F,OAAA;YAAKiF,SAAS,EAAEpF,MAAM,CAAC0H,aAAc;YAAApC,QAAA,eAEnCnF,OAAA,CAACP,aAAa;cACZqH,SAAS,EAAE9B,WAAW,CAAC,CAAE;cACzBiC,OAAO,EAAE1E,UAAW;cACpB1C,MAAM,EAAEe,mBAAmB,CAAC,CAAE;cAC9BoG,SAAS,EAAC,cAAc;cACxB/B,SAAS,EAAEpF,MAAM,CAAC2H;YAAc;cAAAjC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACxE,EAAA,CArKWD,eAAmB;EAAA,QASkBrB,OAAO;AAAA;AAAA6H,EAAA,GAT5CxG,eAAmB;AAuKhC,eAAeA,eAAe;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}