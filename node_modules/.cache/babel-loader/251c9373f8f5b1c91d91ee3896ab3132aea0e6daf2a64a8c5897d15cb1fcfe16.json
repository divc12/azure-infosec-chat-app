{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues, composeComponentAs } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nvar ContextualMenuAnchor = /** @class */function (_super) {\n  __extends(ContextualMenuAnchor, _super);\n  function ContextualMenuAnchor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._anchor = React.createRef();\n    _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n      return __assign(__assign({}, keytipProps), {\n        hasMenu: true\n      });\n    });\n    _this._getSubmenuTarget = function () {\n      return _this._anchor.current ? _this._anchor.current : undefined;\n    };\n    _this._onItemClick = function (ev) {\n      var _a = _this.props,\n        item = _a.item,\n        onItemClick = _a.onItemClick;\n      if (onItemClick) {\n        onItemClick(item, ev);\n      }\n    };\n    _this._renderAriaDescription = function (ariaDescription, className) {\n      // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n      return ariaDescription ? React.createElement(\"span\", {\n        id: _this._ariaDescriptionId,\n        className: className\n      }, ariaDescription) : null;\n    };\n    return _this;\n  }\n  ContextualMenuAnchor.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      item = _a.item,\n      classNames = _a.classNames,\n      index = _a.index,\n      focusableElementIndex = _a.focusableElementIndex,\n      totalItemCount = _a.totalItemCount,\n      hasCheckmarks = _a.hasCheckmarks,\n      hasIcons = _a.hasIcons,\n      expandedMenuItemKey = _a.expandedMenuItemKey,\n      onItemClick = _a.onItemClick,\n      openSubMenu = _a.openSubMenu,\n      dismissSubMenu = _a.dismissSubMenu,\n      dismissMenu = _a.dismissMenu;\n    var ChildrenRenderer = ContextualMenuItem;\n    if (this.props.item.contextualMenuItemAs) {\n      ChildrenRenderer = composeComponentAs(this.props.item.contextualMenuItemAs, ChildrenRenderer);\n    }\n    if (this.props.contextualMenuItemAs) {\n      ChildrenRenderer = composeComponentAs(this.props.contextualMenuItemAs, ChildrenRenderer);\n    }\n    var anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n    var itemHasSubmenu = hasSubmenu(item);\n    var nativeProps = getNativeProps(item, anchorProperties);\n    var disabled = isItemDisabled(item);\n    var itemProps = item.itemProps,\n      ariaDescription = item.ariaDescription;\n    var keytipProps = item.keytipProps;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    var ariaDescribedByIds = mergeAriaAttributeValues(item.ariaDescribedBy, ariaDescription ? this._ariaDescriptionId : undefined, nativeProps['aria-describedby']);\n    var additionalItemProperties = {\n      'aria-describedby': ariaDescribedByIds\n    };\n    return React.createElement(\"div\", null, React.createElement(KeytipData, {\n      keytipProps: item.keytipProps,\n      ariaDescribedBy: ariaDescribedByIds,\n      disabled: disabled\n    }, function (keytipAttributes) {\n      return React.createElement(\"a\", __assign({}, additionalItemProperties, nativeProps, keytipAttributes, {\n        ref: _this._anchor,\n        href: item.href,\n        target: item.target,\n        rel: anchorRel,\n        className: classNames.root,\n        role: \"menuitem\",\n        \"aria-haspopup\": itemHasSubmenu || undefined,\n        \"aria-expanded\": itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n        \"aria-posinset\": focusableElementIndex + 1,\n        \"aria-setsize\": totalItemCount,\n        \"aria-disabled\": isItemDisabled(item),\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        style: item.style,\n        onClick: _this._onItemClick,\n        onMouseEnter: _this._onItemMouseEnter,\n        onMouseLeave: _this._onItemMouseLeave,\n        onMouseMove: _this._onItemMouseMove,\n        onKeyDown: itemHasSubmenu ? _this._onItemKeyDown : undefined\n      }), React.createElement(ChildrenRenderer, __assign({\n        componentRef: item.componentRef,\n        item: item,\n        classNames: classNames,\n        index: index,\n        onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined,\n        hasIcons: hasIcons,\n        openSubMenu: openSubMenu,\n        dismissSubMenu: dismissSubMenu,\n        dismissMenu: dismissMenu,\n        getSubmenuTarget: _this._getSubmenuTarget\n      }, itemProps)), _this._renderAriaDescription(ariaDescription, classNames.screenReaderText));\n    }));\n  };\n  return ContextualMenuAnchor;\n}(ContextualMenuItemWrapper);\nexport { ContextualMenuAnchor };","map":{"version":3,"names":["React","anchorProperties","getNativeProps","memoizeFunction","getId","mergeAriaAttributeValues","composeComponentAs","ContextualMenuItemWrapper","KeytipData","isItemDisabled","hasSubmenu","ContextualMenuItem","ContextualMenuAnchor","_super","__extends","_this","_anchor","createRef","_getMemoizedMenuButtonKeytipProps","keytipProps","__assign","hasMenu","_getSubmenuTarget","current","undefined","_onItemClick","ev","_a","props","item","onItemClick","_renderAriaDescription","ariaDescription","className","createElement","id","_ariaDescriptionId","prototype","render","classNames","index","focusableElementIndex","totalItemCount","hasCheckmarks","hasIcons","expandedMenuItemKey","openSubMenu","dismissSubMenu","dismissMenu","ChildrenRenderer","contextualMenuItemAs","anchorRel","rel","target","toLowerCase","itemHasSubmenu","nativeProps","disabled","itemProps","ariaDescribedByIds","ariaDescribedBy","additionalItemProperties","keytipAttributes","ref","href","root","role","key","style","onClick","onMouseEnter","_onItemMouseEnter","onMouseLeave","_onItemMouseLeave","onMouseMove","_onItemMouseMove","onKeyDown","_onItemKeyDown","componentRef","onCheckmarkClick","getSubmenuTarget","screenReaderText"],"sources":["C:\\Users\\divc1\\Downloads\\demosb\\sb-agentic-ai-security-agents\\node_modules\\@fluentui\\react\\lib\\components\\ContextualMenu\\src\\components\\ContextualMenu\\ContextualMenuItemWrapper\\ContextualMenuAnchor.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  anchorProperties,\n  getNativeProps,\n  memoizeFunction,\n  getId,\n  mergeAriaAttributeValues,\n  IComponentAs,\n  composeComponentAs,\n} from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport type { IKeytipDataProps } from '../../../KeytipData';\nimport type { IKeytipProps } from '../../../Keytip';\nimport { IContextualMenuItemProps } from '../ContextualMenuItem.types';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n  private _ariaDescriptionId: string;\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true,\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu,\n    } = this.props;\n\n    let ChildrenRenderer: IComponentAs<IContextualMenuItemProps> = ContextualMenuItem;\n\n    if (this.props.item.contextualMenuItemAs) {\n      ChildrenRenderer = composeComponentAs(this.props.item.contextualMenuItemAs, ChildrenRenderer);\n    }\n\n    if (this.props.contextualMenuItemAs) {\n      ChildrenRenderer = composeComponentAs(this.props.contextualMenuItemAs, ChildrenRenderer);\n    }\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps, ariaDescription } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n    // the description in it to be added to ariaDescribedBy\n    if (ariaDescription) {\n      this._ariaDescriptionId = getId();\n    }\n    const ariaDescribedByIds = mergeAriaAttributeValues(\n      item.ariaDescribedBy,\n      ariaDescription ? this._ariaDescriptionId : undefined,\n      nativeProps['aria-describedby'],\n    );\n\n    const additionalItemProperties = {\n      'aria-describedby': ariaDescribedByIds,\n    };\n\n    return (\n      <div>\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={ariaDescribedByIds} disabled={disabled}>\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...additionalItemProperties}\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              // eslint-disable-next-line @typescript-eslint/no-deprecated\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n              {this._renderAriaDescription(ariaDescription, classNames.screenReaderText)}\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n\n  protected _renderAriaDescription = (ariaDescription?: string, className?: string) => {\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n    return ariaDescription ? (\n      <span id={this._ariaDescriptionId} className={className}>\n        {ariaDescription}\n      </span>\n    ) : null;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}